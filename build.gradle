group 'jp.co.fablic.spikot'
version '0.1.0'

buildscript {
    ext.kotlin_version = '1.1.51'
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'com.github.ksoichiro:gradle-build-info-plugin:0.2.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "com.github.ben-manes.versions"
apply plugin: 'com.github.ksoichiro.build.info'

buildConfig {
    appName = project.name
    packageName = project.group
    clsName = 'BuildConfig'

    Properties properties = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists())
        properties.load(file.newDataInputStream())
    buildConfigField 'String', 'SLACK_TOKEN', properties.getProperty("slackToken", "${System.env.SLACK_TOKEN}")
    buildConfigField 'String', 'SLACK_CHANNEL_NAME', properties.getProperty("slackChannelName", "${System.env.SLACK_CHANNEL_NAME}")
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'http://jcenter.bintray.com' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.github.kittinunf.fuel:fuel:1.11.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3"
    compile "org.spigotmc:spigot-api:1.13-pre7-R0.1-SNAPSHOT"
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0")
}

jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}
